{"version":3,"file":"component---src-pages-grade-tracker-gpa-js-4b9969ae1ac519b1bfa9.js","mappings":"2SAyZA,UA9YA,WAEI,MAEM,EAACA,EAAK,EAACC,IAAWC,EAAAA,EAAAA,WAAS,GAC3BC,EAAc,IAAMF,GAAQ,IAI5B,EAACG,EAAU,EAACC,IAAgBH,EAAAA,EAAAA,UAAS,KACrC,EAACI,EAAU,EAACC,IAAgBL,EAAAA,EAAAA,UAAS,KACrC,EAACM,EAAU,EAACC,IAAgBP,EAAAA,EAAAA,UAAS,KACrC,EAACQ,EAAU,EAACC,IAAgBT,EAAAA,EAAAA,UAAS,KACrC,EAACU,EAAW,EAACC,IAAiBX,EAAAA,EAAAA,UAAS,KACvC,EAACY,EAAa,EAACC,IAAmBb,EAAAA,EAAAA,UAAS,KAC3C,EAACc,EAAW,EAACC,IAAiBf,EAAAA,EAAAA,UAAS,KACvC,EAACgB,EAAW,EAACC,IAAiBjB,EAAAA,EAAAA,UAAS,KACvC,EAACkB,EAAS,EAACC,IAAenB,EAAAA,EAAAA,YAIhC,IAAIoB,EAAaC,GACZC,EAAaC,IAAkBC,EAAAA,EAAAA,GAAgB,OAAO,KACtDC,EAAUC,IAAeF,EAAAA,EAAAA,GAAgB,aAAa,KACtDG,EAAIC,IAAUJ,EAAAA,EAAAA,GAAgB,MAAM,GACzCK,QAAQC,IAAIL,GAKZ,MAAOM,EAAQC,IAAaR,EAAAA,EAAAA,GAAgB,SAAU,SACtD,IAAKS,EAAcC,GAAmBC,EAAAA,SAAe,KAChDC,EAASC,GAAcF,EAAAA,SAAe,SACtCG,EAAMC,IAAWf,EAAAA,EAAAA,GAAgB,OAAO,IA+H7C,OACA,gCAEI,gBAAC,IAAM,CAACgB,GAAG,SAASC,QAAQ,QACxB,gBAAC,IAAS,KACV,gBAAC,UAAY,CAACC,KAAK,IAAE,gBACrB,gBAAC,IAAG,CAACC,UAAU,WACX,gBAAC,SAAQ,CAACD,KAAK,IAAE,QACjB,gBAAC,SAAQ,CAACA,KAAK,IAAE,iBACjB,gBAAC,SAAQ,CAACA,KAAK,IAAE,aAIzB,2BAGA,gBAAC,IAAK,CAAC5C,KAAMA,EAAM8C,OAAQ3C,GACvB,gBAAC,WAAY,CAAC4C,aAAW,GACzB,gBAAC,UAAW,0BAEZ,gBAAC,SAAU,8CACX,gBAAC,WAAY,KACb,gBAAC,IAAM,CAACJ,QAAQ,YAAYK,QAAS7C,GAAY,WAMrD,gBAAC,IAAS,KAEN,uBAAK0C,UAAU,8BACX,0CAGJ,2BACI,gBAAC,IAAW,CAAC,aAAW,iBAChB,gBAAC,IAAM,CAACF,QAAQ,UAAUK,QAAS1B,EAAaC,GAAO,aAAmB,IAC1E,gBAAC,IAAM,CAACoB,QAAQ,UAAUK,QAAS1B,EAAa2B,GAAO,aAAmB,MAItF,2BAEA,uBAAKJ,UAAU,YAEf,gBAAC,IAAG,KAGA,gBAAC,IAAG,CAACK,GAAI,GACL,gBAAC,IAAG,KACA,sBAAIL,UAAU,oBAAkB,WACpB,gBAAC,IAAK,CAACH,GAAG,UAAQ,SAE9B,uBAAKG,UAAU,2BACX,yBAAQA,UAAU,cAAY,YAC9B,uBAAKA,UAAU,SACX,gBAAC,UAAU,CAACM,UAAU,QAClB,gBAAC,WAAW,CAACC,GAAG,OAAO,aAAW,OAAOC,SAAWC,IAChD,MAAMC,EAAeD,EAAEE,OAAOC,MAC9BpD,EAAakD,EAAa,GAE1B,0BAAQG,IAAI,cAAcC,QAAM,EAACF,OAAK,IACtC,0BAAQA,MAAM,QAAM,QACpB,0BAAQA,MAAM,QAAM,QACpB,0BAAQA,MAAM,QAAM,QACpB,0BAAQA,MAAM,QAAM,WAKhC,uBAAKZ,UAAU,SACX,gBAAC,UAAU,CAACM,UAAU,QAClB,gBAAC,WAAW,CAACC,GAAG,OAAO,aAAW,OAAOC,SAAWO,IAChD,MAAMC,EAAeD,EAAMJ,OAAOC,MAClClD,EAAasD,EAAa,GAE1B,0BAAQH,IAAI,cAAcC,QAAM,EAACF,OAAK,IACtC,0BAAQA,MAAM,KAAG,KACjB,0BAAQA,MAAM,KAAG,KACjB,0BAAQA,MAAM,KAAG,SAQjC,uBAAKZ,UAAU,QACX,yBAAQA,UAAU,cAAY,kBAC9B,uBAAKA,UAAU,UACX,gBAAC,WAAW,CAACO,GAAG,eAAe,aAAW,gBAAgBC,SAAWS,IAC7D,MAAMC,EAAgBD,EAAON,OAAOC,MACpC5C,EAAckD,EAAc,GAEhC,0BAAQL,IAAI,cAAcC,QAAM,EAACF,OAAK,IACrClC,EAAAA,WAAAA,QAAAA,KAA8B,CAACyC,EAAMC,IAC3B,0BAAQP,IAAG,gBAAkBO,EAASR,MAAK,GAAKO,EAAKE,WAAcF,EAAKE,gBAQ/F,uBAAKrB,UAAU,QACX,yBAAOA,UAAU,cAAY,WAE7B,uBAAKA,UAAU,UACX,gBAAC,WAAW,CAACY,MAAO/C,EAAW,aAAW,UAAU2C,SAAWc,IACvD,MAAMC,EAAeD,EAAMX,OAAOC,MAClC9C,EAAayD,EAAa,GAE9B,0BAAQV,IAAI,cAAcC,QAAM,EAACF,OAAK,IACrClC,EAAAA,WAAAA,SAzLH8C,EAyLkDzD,EAvL/D,qBAAVyD,EACQ,EAEO,uBAAVA,EACG,EAEO,2BAAVA,EACG,EAEO,oCAAVA,EACG,EAEM,8BAATA,EACG,EAEO,iBAAVA,EACG,EAEO,2BAAVA,EACG,EAEO,2BAAVA,EACG,EAGA,IA8J8EC,SAASC,KAAI,CAACP,EAAMC,IACtE,0BAAQP,IAAG,gBAAkBO,EAASR,MAAK,GAAKO,EAAKQ,MAAO,IAAGR,EAAKQ,WAO3F,uBAAK3B,UAAU,QACX,yBAAQA,UAAU,cAAY,SAC9B,uBAAKA,UAAU,UACX,gBAAC,WAAW,CAACO,GAAG,QAAQ,aAAW,QAAQC,SAAWoB,IAC9C,MAAMC,EAAgBD,EAAOjB,OAAOC,MAC9BkB,EAA4D,GArKpF,OADYC,EAsKiDH,EAAOjB,OAAOC,OApK9E,EAEQ,OAAVmB,EACE,KAEQ,OAAVA,EACE,KAEQ,MAAVA,EACE,EAEO,OAATA,EACE,KAEQ,OAAVA,EACE,KAEQ,MAAVA,EACE,EAEQ,OAAVA,EACE,KAEQ,MAAVA,EACE,EAEQ,MAAVA,GAGU,MAAVA,EAFE,OAEN,GA/BT,IAA8BA,EAuKM3D,EAAcyD,GACdvD,EAAcwD,EAAc,GAGhC,0BAAQjB,IAAI,cAAcC,QAAM,EAACF,OAAK,IACtC,0BAAQA,MAAM,KAAG,KACjB,0BAAQA,MAAM,MAAI,MAClB,0BAAQA,MAAM,MAAI,MAClB,0BAAQA,MAAM,KAAG,KACjB,0BAAQA,MAAM,MAAI,MAClB,0BAAQA,MAAM,MAAI,MAClB,0BAAQA,MAAM,KAAG,KACjB,0BAAQA,MAAM,MAAI,MAClB,0BAAQA,MAAM,KAAG,KACjB,0BAAQA,MAAM,KAAG,KACjB,0BAAQA,MAAM,KAAG,QAM7B,2BACI,gBAAC,IAAM,CAACd,QAAQ,UAAUK,QAAS,IAjR3D,SAAoB6B,EAAMC,EAAMT,EAAOG,EAAMI,EAAOG,GAEhD,GAA6C,IAATA,EAAY,CAE5C,IAAIC,EAAa,CACbH,KAAOA,EACPC,KAAOA,EACPT,MAAQA,EACRG,KAAOA,EACPI,MAAQA,GAIZjD,EAASsD,KAAKC,OAAOH,IACrBhD,QAAQC,IAAI+C,GACZhD,QAAQC,IAAIL,GACZI,QAAQC,IAAIgD,GACZxD,EAAYyD,KAAKD,GACjBjD,QAAQC,IAAIR,GACZC,GAAe,OAAID,IACnBI,GAAY,OAAID,GAEpB,MAEI1B,GAAQ,EAGhB,CAsPiEkF,CAAW/E,EAAWE,EAAWM,EAAYF,EAAWM,EAAYE,IAAY,oBASrI,gBAAC,IAAG,KAEA,yBAAQkC,GAAG,aAAaP,UAAU,+DAC9B,6BACI,sBAAIA,UAAU,0BACV,4BAEJ,sBAAIA,UAAU,0BACV,wCACA,qCACA,qCAIR,yBAAOA,UAAU,eACb,0BACCrB,EAAY+C,KAAI,CAACa,EAAMC,IACb,gBAAC,IAAG,CAAC3B,IAAK2B,GACb,gBAAC,IAAG,KAAED,EAAKf,WAKnB,0BACK7C,EAAY+C,KAAI,CAACa,EAAMC,IACb,gBAAC,IAAG,CAAC3B,IAAK2B,GACb,gBAAC,IAAG,KAAED,EAAKZ,UAKvB,0BACKhD,EAAY+C,KAAI,CAACa,EAAMC,IACb,gBAAC,IAAG,CAAC3B,IAAK2B,GACb,gBAAC,IAAG,KAAED,EAAKR,YAM3B,yBAAQ/B,UAAU,eACd,sBAAIA,UAAU,aACV,gBAAC,IAAG,mBACYhB,MAW5B,uBAAKgB,UAAU,sBACX,uBAAKA,UAAU,SACX,gBAAC,IAAM,CAACF,QAAQ,iBAAiBK,QAAS,KApT9DjB,QAAQC,IAAI,UACZP,EAAe,IACfG,EAAY,SACZE,EAAO,KAiTyE,wBAAgC,KAGhG,uBAAKe,UAAU,SACP,gBAAC,IAAM,CAACF,QAAQ,kBAAkBK,QAAS,IAjTvE,WACI,GAAIrB,GAAY,GAAG,CACf,IAAI2D,EAAU3D,EAAS4D,QAAO,CAACC,EAAOC,IAAUD,EAAOC,KAA+B,EAAnB9D,EAAS+D,QAC5E3D,QAAQC,IAAIsD,GACZxD,EAAOwD,EACX,MAEIxD,EAAO,EAGf,CAuS6E6D,IAAU,oBAA4B,WAlSnH,IAA8BtB,CAkTlC,C","sources":["webpack://gatsby-starter-default/./src/pages/grade-tracker/gpa.js"],"sourcesContent":["import * as React from 'react'\r\nimport { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, ButtonGroup, Button, Row, Col, Nav, Navbar, Dropdown, Badge, Modal, Form, FormGroup } from 'react-bootstrap';\r\nimport CoffeeCard from '../../components/CoffeeCard';\r\nimport CSData from \"../../content/cs-2019.json\"\r\nimport ITData from \"../../content/it-2019.json\"\r\nimport { useLocalStorage } from 'react-use';\r\n\r\n\r\n\r\nfunction GradePage(){\r\n\r\n    const dummyPrice = 59\r\n    //Modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    \r\n    //Input\r\n    const [yearState, setYearState] = useState(\"\")\r\n    const [termState, setTermState] = useState(\"\")\r\n    const [codeState, setCodeState] = useState(\"\")\r\n    const [nameState, setNameState] = useState(\"\")\r\n    const [groupState, setGroupState] = useState(\"\")\r\n    const [subjectState, setSubjectState] = useState(\"\")\r\n    const [gradeState, setGradeState] = useState(\"\")\r\n    const [scoreState, setScoreState] = useState(\"\")\r\n    const [gpaState, setgpaState] = useState()\r\n\r\n    // Course\r\n    //let [subCourse, setCourse] = React.useState('iced')\r\n    let courseData = CSData\r\n    let [subjectList, setSubjectList] = useLocalStorage('list',[])\r\n    let [totScore, setTotScore] = useLocalStorage('totalScore',[])\r\n    let [GPA,setGPA] = useLocalStorage('GPA',0)\r\n    console.log(totScore)\r\n    \r\n    \r\n    \r\n\r\n    const [coffee, setCoffee] = useLocalStorage('coffee', 'Latte')\r\n    let [coffeeTitles, setCoffeeTitles] = React.useState([])\r\n    let [subMenu, setSubMenu] = React.useState('iced')\r\n    let [cart, setCart] = useLocalStorage('cart',[])\r\n\r\n\r\n    function AddSubject(year, term, group, name, grade, score) {\r\n\r\n        if (year, term, group, name, grade, score != ''){\r\n            \r\n            let productObj = {\r\n                year: (year),\r\n                term: (term),\r\n                group: (group),\r\n                name: (name),\r\n                grade: (grade),\r\n                \r\n            }\r\n\r\n            totScore.push(Number(score))\r\n            console.log(score)\r\n            console.log(totScore)\r\n            console.log(productObj)\r\n            subjectList.push(productObj)\r\n            console.log(subjectList)\r\n            setSubjectList([...subjectList])\r\n            setTotScore([...totScore])\r\n\r\n        }\r\n        else {\r\n            setShow(true)\r\n        }\r\n           \r\n    }\r\n\r\n    function ClearData(){\r\n        console.log(\"DELETE\")\r\n        setSubjectList([])\r\n        setTotScore([])\r\n        setGPA(0)\r\n      \r\n    }\r\n\r\n    function CalcGPA(){\r\n        if (totScore != []){\r\n            let GPATemp = totScore.reduce((result,number)=> result+number) / ((totScore.length) * 3)\r\n            console.log(GPATemp)\r\n            setGPA(GPATemp)\r\n        }\r\n        else {\r\n            setGPA(0.0)\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n\r\n    function SubjectListFromGroup(group) {\r\n        \r\n       if (group === \"Language Courses\"){\r\n            return 0;\r\n       }\r\n       else if (group === \"Humanities Courses\"){\r\n            return 1;\r\n       }\r\n       else if (group === \"Social Science Courses\"){\r\n            return 2;   \r\n       }\r\n       else if (group === \"Science and Mathemetics Courses\"){\r\n            return 3;\r\n       }\r\n       else if (group ===\"General Education Courses\"){\r\n            return 4;\r\n       }\r\n       else if (group === \"Core Courses\"){\r\n            return 5;\r\n       }\r\n       else if (group === \"Major Required Courses\"){\r\n            return 6;\r\n       }\r\n       else if (group === \"Major Elective Courses\"){\r\n            return 7;\r\n       }\r\n       else{\r\n            return 0;\r\n       }\r\n        \r\n    }\r\n\r\n    function convertGradeToNumber(grade) {\r\n        if (grade === \"A\"){\r\n            return 4;\r\n        }\r\n        else if (grade === \"A-\"){\r\n            return 3.75;\r\n        }\r\n        else if (grade === \"B+\"){\r\n            return 3.25;   \r\n        }\r\n        else if (grade === \"B\"){\r\n            return 3;\r\n        }\r\n        else if (grade ===\"B-\"){\r\n            return 2.75;\r\n        }\r\n        else if (grade === \"C+\"){\r\n            return 2.25;\r\n        }\r\n        else if (grade === \"C\"){\r\n            return 2;\r\n        }\r\n        else if (grade === \"C-\"){\r\n            return 1.75;\r\n        }\r\n        else if (grade === \"D\"){\r\n            return 1;\r\n        }\r\n        else if (grade === \"F\"){\r\n            return 0;\r\n        }\r\n        else if (grade === \"W\"){\r\n            return 0;\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n\r\n\r\n    return (\r\n    <>\r\n        {/*Navation*/}\r\n        <Navbar bg=\"danger\" variant=\"dark\">\r\n            <Container>\r\n            <Navbar.Brand href=\"\">Low Int Sage</Navbar.Brand>\r\n            <Nav className=\"me-auto\">\r\n                <Nav.Link href=\"\">Home</Nav.Link>\r\n                <Nav.Link href=\"\">Grade Tracker</Nav.Link>\r\n                <Nav.Link href=\"\">Readme</Nav.Link>\r\n            </Nav>\r\n            </Container>\r\n        </Navbar>\r\n        <br/>\r\n\r\n        {/*Modal*/}\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Unselected Field</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Please fill all the unselected field!</Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Container>\r\n            {/*Header*/}\r\n            <div className=\"text-center mt-5 col-md-12\">\r\n                <h1>GPA Tracker</h1>\r\n                \r\n            </div>\r\n            <div >\r\n                <ButtonGroup aria-label=\"Basic Example\">\r\n                        <Button variant=\"primary\" onClick={courseData = CSData}>CS Course</Button> {/*Set Course To CS */}\r\n                        <Button variant=\"warning\" onClick={courseData = ITData}>IT Course</Button> {/*Set Course To IT */}\r\n                </ButtonGroup>\r\n            </div>\r\n            \r\n            <br/>\r\n\r\n            <div className='bg-light'>\r\n            {/*Content*/}\r\n            <Row>\r\n\r\n                {/*Field select */} \r\n                <Col sm={3}>\r\n                    <Row>\r\n                        <h4 className=\"text-center mt-3\">\r\n                            Subject <Badge bg=\"danger\">Form</Badge>\r\n                        </h4>\r\n                        <div className=\"row mt-3 mr-2 col-md-12\">\r\n                            <label  className=\"form-label\">Semester</label>\r\n                            <div className=\"col-5\">\r\n                                <Form.Group controlId='year'>\r\n                                    <Form.Select id=\"year\" aria-label=\"Year\" onChange={(e) =>{\r\n                                        const selectedYear = e.target.value;\r\n                                        setYearState(selectedYear)\r\n                                    }}>\r\n                                        <option key='blankChoice' hidden value />\r\n                                        <option value=\"2019\">2019</option>\r\n                                        <option value=\"2020\">2020</option>\r\n                                        <option value=\"2021\">2021</option>\r\n                                        <option value=\"2021\">2022</option>\r\n                                    </Form.Select>\r\n                                </Form.Group>\r\n                            </div>\r\n                        \r\n                            <div className=\"col-5\">\r\n                                <Form.Group controlId='term'>\r\n                                    <Form.Select id=\"term\" aria-label=\"Term\" onChange={(eTerm) =>{\r\n                                        const selectedTerm = eTerm.target.value;\r\n                                        setTermState(selectedTerm)\r\n                                    }}>\r\n                                        <option key='blankChoice' hidden value />\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                    </Form.Select>\r\n                                </Form.Group>\r\n                         \r\n                            </div>\r\n                        \r\n                        </div>\r\n                    \r\n                        <div className=\"mb-3\">\r\n                            <label  className=\"form-label\">Group Subjects</label>\r\n                            <div className=\"col-12\">\r\n                                <Form.Select id=\"groupSubject\" aria-label=\"Group Subject\" onChange={(eGroup) =>{\r\n                                        const selectedGroup = eGroup.target.value;\r\n                                        setGroupState(selectedGroup)\r\n                                    }}>\r\n                                    <option key='blankChoice' hidden value />\r\n                                    {CSData.curriculum.courses.map((data, index) => {\r\n                                        return <option key={`content_item_${index}`} value={`${data.groupName}`}>{data.groupName}</option>\r\n                                    })}\r\n                                </Form.Select>\r\n\r\n                            </div>\r\n                                \r\n                        </div>\r\n                    \r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Subject</label>\r\n            \r\n                            <div className=\"col-12\">\r\n                                <Form.Select value={nameState} aria-label=\"Subject\" onChange={(eName) =>{\r\n                                        const selectedName = eName.target.value;\r\n                                        setNameState(selectedName)\r\n                                    }}>\r\n                                    <option key='blankChoice' hidden value/>\r\n                                    {CSData.curriculum.courses[SubjectListFromGroup(groupState)].subjects.map((data, index) => {\r\n                                        return <option key={`content_item_${index}`} value={`${data.name}`}> {data.name}</option>\r\n                                    })}\r\n                                </Form.Select>\r\n                            </div>\r\n                                \r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label  className=\"form-label\">Grade</label>\r\n                            <div className=\"col-12\">\r\n                                <Form.Select id=\"grade\" aria-label=\"Grade\" onChange={(eGrade) =>{\r\n                                        const selectedGrade = eGrade.target.value;\r\n                                        const selectedScore = convertGradeToNumber(eGrade.target.value) * 3;\r\n                                        setGradeState(selectedGrade)\r\n                                        setScoreState(selectedScore)\r\n                                        \r\n                                    }}>\r\n                                    <option key='blankChoice' hidden value />\r\n                                    <option value=\"A\">A</option>\r\n                                    <option value=\"A-\">A-</option>\r\n                                    <option value=\"B+\">B+</option>\r\n                                    <option value=\"B\">B</option>\r\n                                    <option value=\"B-\">B-</option>\r\n                                    <option value=\"C+\">C+</option>\r\n                                    <option value=\"C\">C</option>\r\n                                    <option value=\"C-\">C-</option>\r\n                                    <option value=\"D\">D</option>\r\n                                    <option value=\"F\">F</option>\r\n                                    <option value=\"W\">W</option>\r\n                                </Form.Select>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <Button variant=\"success\" onClick={() => AddSubject(yearState, termState, groupState, nameState, gradeState, scoreState)}> Add Subject </Button>\r\n                        </div>\r\n\r\n            \r\n                    </Row>\r\n                </Col>\r\n            \r\n\r\n                {/*Grade Table*/}  \r\n                <Col>\r\n                    \r\n                    <table  id=\"data-table\" className=\"table table-bordered table-striped mt-2 col-md-12  bg-white\"   >\r\n                        <thead>\r\n                            <tr className=\"table-dark text-center\">\r\n                                <th></th>\r\n                            </tr>\r\n                            <tr className=\"table-dark text-center\">\r\n                                <th>Subject ID</th>\r\n                                <th>Subject</th>\r\n                                <th>Grade</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody className=\"text-center\" >\r\n                            <td>\r\n                            {subjectList.map((item, i) => {\r\n                                return <Row key={i}>\r\n                                    <Col>{item.group}</Col>\r\n                                </Row>\r\n                                \r\n                            })}\r\n                            </td>\r\n                            <td>\r\n                                {subjectList.map((item, i) => {\r\n                                    return <Row key={i}>\r\n                                        <Col>{item.name}</Col>\r\n                                    </Row>\r\n                                    \r\n                                })}\r\n                            </td>\r\n                            <td>\r\n                                {subjectList.map((item, i) => {\r\n                                    return <Row key={i}>\r\n                                        <Col>{item.grade}</Col>\r\n                                    </Row>\r\n                                    \r\n                                })}\r\n                            </td>\r\n                        </tbody >\r\n                        <tfoot  className=\"text-center\">\r\n                            <td className=\"text-left\">\r\n                                <Row>\r\n                                    Total GPA: {GPA}\r\n                                </Row>\r\n                            </td>\r\n\r\n                            \r\n                        </tfoot>\r\n                        \r\n                    </table>\r\n\r\n             \r\n\r\n                    <div className=\"row mt-3 col-md-12\">\r\n                        <div className=\"col-9\">\r\n                            <Button variant=\"outline-danger\" onClick={() => ClearData()} > Clear All Subjects </Button>{' '}\r\n                        </div>\r\n\r\n                        <div className=\"col-3\">\r\n                                <Button variant=\"outline-success\" onClick={() => CalcGPA()} > Clalculate GPA </Button>{' '}\r\n                        </div>\r\n                    </div>\r\n\r\n              \r\n                \r\n                </Col>\r\n\r\n            </Row>\r\n            </div>                    \r\n        </Container>\r\n    </>\r\n    );\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n\r\nexport default GradePage"],"names":["show","setShow","useState","handleClose","yearState","setYearState","termState","setTermState","codeState","setCodeState","nameState","setNameState","groupState","setGroupState","subjectState","setSubjectState","gradeState","setGradeState","scoreState","setScoreState","gpaState","setgpaState","courseData","CSData","subjectList","setSubjectList","useLocalStorage","totScore","setTotScore","GPA","setGPA","console","log","coffee","setCoffee","coffeeTitles","setCoffeeTitles","React","subMenu","setSubMenu","cart","setCart","bg","variant","href","className","onHide","closeButton","onClick","ITData","sm","controlId","id","onChange","e","selectedYear","target","value","key","hidden","eTerm","selectedTerm","eGroup","selectedGroup","data","index","groupName","eName","selectedName","group","subjects","map","name","eGrade","selectedGrade","selectedScore","grade","year","term","score","productObj","push","Number","AddSubject","item","i","GPATemp","reduce","result","number","length","CalcGPA"],"sourceRoot":""}